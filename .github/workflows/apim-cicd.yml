name: APIM-CherryPick-TemplateDeploy

# Manual trigger with parameters
on:
  workflow_dispatch:
    inputs:
      #Name of your Source Cosmos DB
      ENVIRONMENT:
        description: 'Deployment Environment (npr/prp/prd)'
        required: true
        default: 'npr'
        
      ARMtemplate_Path:
        description: 'ARM template Json file to create apis/Collection. Path Relative tO GITHUB'
        required: true
        default: '/APIM/arm-template/'
            
      apis_list:
        description: 'List of APIs to Deploy--> , separated OR all for all the Object'
        required: true
        default: 'all'

jobs:
  #############################################################
  # This is packaging up the files from Git to the Artifacts files
  #############################################################
  Build:
    runs-on: ubuntu-latest
    env:
      input_commitid: '${{ github.event.inputs.INPUT_COMMITID }}'

    # Checkout code
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    # Publish Artifact: Publish: Deployment-Scripts
    - name: 'Publish Artifact: APIM SYNC' 
      uses: actions/upload-artifact@v2
      with:
        name: 'deployment-scripts'
        path: '${{ github.workspace }}/Deployment-Scripts/APIM-Sync/'
    
    - name: Install dependencies
      run: |
        cd "$GITHUB_WORKSPACE/Deployment-Scripts/Update-Properties/"
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # Optional: Add step to run tests here
    - name: Update Properties on Non-Production Environment
      if: ${{ github.event.inputs.ENVIRONMENT == 'npr' }}
      run: |
        cd "$GITHUB_WORKSPACE/APIM/arm-template/"
        python3 $GITHUB_WORKSPACE/Deployment-Scripts/Update-Properties/properties-update.py \
          '${{ github.workspace }}/APIM/npr-app-config.properties' \
          '${{ github.workspace }}/APIM/arm-template/'
    
    - name: Update Properties on Pre-Production Environment
      if: ${{ github.event.inputs.ENVIRONMENT == 'prp' }}
      run: |
        cd "$GITHUB_WORKSPACE/APIM/arm-template/"
        python3 $GITHUB_WORKSPACE/Deployment-Scripts/Update-Properties/properties-update.py \
          '${{ github.workspace }}/APIM/prp-app-config.properties' \
          '${{ github.workspace }}/APIM/arm-template/'
         
    - name: Update Properties on Production Environment
      if: ${{ github.event.inputs.ENVIRONMENT == 'prd' }}
      run: |
        cd "$GITHUB_WORKSPACE/APIM/arm-template/"
        python3 $GITHUB_WORKSPACE/Deployment-Scripts/Update-Properties/properties-update.py \
          '${{ github.workspace }}/APIM/prd-app-config.properties' \
          '${{ github.workspace }}/APIM/arm-template/'
          
    # Publish Artifact: Publish: Template JSON
    - name: 'Publish Artifact: Template JSON' 
      uses: actions/upload-artifact@v2
      with:
        name: 'template-file'
        path: '${{ github.workspace }}/${{ github.event.inputs.ARMtemplate_Path }}'
    
        
#############################################################
# Deploy to Dev
#############################################################
  Dev:
    if: ${{ github.event.inputs.Environment == 'npr' }}
    needs: Build
    runs-on: ubuntu-latest
    env:
       TargetAPIM_NAME: 'devops-apimtest-1'
       TargetAPIM_RG: 'devops-confluent-test' 
       keyVaultName: 'akv-sp'
 
        
    steps:
    # Login to Azure
    - name: Login via Az module
      uses: Azure/login@v1.4.5
      with:
        creds: | 
          ${{ secrets.SP_NPR }}
          
    # Download secret from KeyVault Secrets
    - name: Download publish profile from KeyVault Secrets
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.keyVaultName }}
        secrets: 'sp-npr-appid,sp-npr-secretkey,sp-npr-tenantid,sp-npr-subscriptionid'
      id: AzureSPCred
      
    # Download Artifact: deployment-scripts
    - name: 'Download Artifact: ARM-Templates' 
      uses: actions/download-artifact@v2
      with:
        name: 'deployment-scripts'
        path: ${{ github.workspace }}/Deployment-Scripts/APIM-Sync/

    # Download Artifact: Publish: Template JSON
    - name: 'Publish Artifact: Template JSON' 
      uses: actions/download-artifact@v2
      with:
        name: 'template-file'
        path: '${{ github.workspace }}/${{ github.event.inputs.ARMtemplate_Path }}'
        
    - name: Install dependencies
      run: |
        cd "$GITHUB_WORKSPACE/Deployment-Scripts/APIM-Sync/"
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Deploy Template
      run: |
       chmod +x $GITHUB_WORKSPACE/Deployment-Scripts/APIM-Sync/template-deploy-api-Management.py
       python3 $GITHUB_WORKSPACE/Deployment-Scripts/APIM-Sync/template-deploy-api-Management.py
      env:
        ARMtemplate_Path: '${{ github.workspace }}/${{ github.event.inputs.ARMtemplate_Path }}'
        TargetAPIM_NAME: ${{ env.TargetAPIM_NAME }}
        TargetAPIM_RG: ${{ env.TargetAPIM_RG }}
        CLIENT_SECRET: ${{ steps.AzureSPCred.outputs.sp-npr-secretkey }}
        CLIENT_ID: ${{ steps.AzureSPCred.outputs.sp-npr-appid }}
        TENANT_ID: ${{ steps.AzureSPCred.outputs.sp-npr-tenantid }}
        SUBSCRIPTION_ID: ${{ steps.AzureSPCred.outputs.sp-npr-subscriptionid }}
        apis_list: ${{ github.event.inputs.apis_list }}


