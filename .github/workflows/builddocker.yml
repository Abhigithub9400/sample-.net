name: Docker Image CI

on:
  workflow_dispatch:
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Azure Container Registry login and build
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.acrlogin }}
        # Container registry password
        password: ${{ secrets.acrpassword }}
        # Container registry server url
        login-server: ${{ secrets.acrserver }}
    - name: Build the Image
      run: |
       cd ${GITHUB_WORKSPACE}/ContainerApp/demoApp
       chmod +x increment_version.sh
       NEW_VERSION=$(./increment_version.sh)
       echo "The new version is $NEW_VERSION"
       echo "IMAGE_TAG=$NEW_VERSION" >> $GITHUB_ENV
       echo "the update version is ===============$NEW_VERSION"
       docker build . --file Dockerfile -t ${{ secrets.acrserver }}/srstest:v$NEW_VERSION
       
    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #       image-ref: '${{ secrets.acrserver }}/srstest:${{ github.sha }}'
    #       format: 'table'
    #       exit-code: '1'
    #       ignore-unfixed: true
    #       vuln-type: 'os,library'
    #       severity: 'CRITICAL'
       
       
    - name: Install Trivy
      run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.20.1/trivy_0.20.1_Linux-64bit.tar.gz
          tar zxvf trivy_0.20.1_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version

    - name: Scan Docker image for vulnerabilities
      run: |
          trivy --exit-code 1 --vuln-type os,library --severity CRITICAL ${{ secrets.acrserver }}/srstest:v$IMAGE_TAG
          #https://aquasecurity.github.io/trivy/v0.22.0/getting-started/cli/image/

    - name: Push the Image
      run: |
          docker push ${{ secrets.acrserver }}/srstest:v$IMAGE_TAG
